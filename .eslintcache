[{"/Users/junpyojang/gong/react-firebase-chat/src/index.js":"1","/Users/junpyojang/gong/react-firebase-chat/src/reportWebVitals.js":"2","/Users/junpyojang/gong/react-firebase-chat/src/App.js":"3","/Users/junpyojang/gong/react-firebase-chat/src/redux/reducer/index.js":"4","/Users/junpyojang/gong/react-firebase-chat/src/components/RegisterPage/RegisterPage.js":"5","/Users/junpyojang/gong/react-firebase-chat/src/components/Loginpage/LoginPage.js":"6","/Users/junpyojang/gong/react-firebase-chat/src/components/ChatPage/ChatPage.js":"7","/Users/junpyojang/gong/react-firebase-chat/src/firebase.js":"8","/Users/junpyojang/gong/react-firebase-chat/src/redux/reducer/user_reducer.js":"9","/Users/junpyojang/gong/react-firebase-chat/src/redux/actions/types.js":"10","/Users/junpyojang/gong/react-firebase-chat/src/redux/actions/user_actions.js":"11"},{"size":977,"mtime":1612298500890,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1612282076300,"results":"14","hashOfConfig":"13"},{"size":1262,"mtime":1612299629205,"results":"15","hashOfConfig":"13"},{"size":263,"mtime":1612292650237,"results":"16","hashOfConfig":"13"},{"size":4089,"mtime":1612289414248,"results":"17","hashOfConfig":"13"},{"size":2406,"mtime":1612291185916,"results":"18","hashOfConfig":"13"},{"size":145,"mtime":1612285281449,"results":"19","hashOfConfig":"13"},{"size":676,"mtime":1612282894923,"results":"20","hashOfConfig":"13"},{"size":427,"mtime":1612293258192,"results":"21","hashOfConfig":"13"},{"size":35,"mtime":1612292376056,"results":"22","hashOfConfig":"13"},{"size":136,"mtime":1612292652384,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"giixmd",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/junpyojang/gong/react-firebase-chat/src/index.js",[],"/Users/junpyojang/gong/react-firebase-chat/src/reportWebVitals.js",[],["48","49"],"/Users/junpyojang/gong/react-firebase-chat/src/App.js",["50"],"/Users/junpyojang/gong/react-firebase-chat/src/redux/reducer/index.js",[],"/Users/junpyojang/gong/react-firebase-chat/src/components/RegisterPage/RegisterPage.js",["51"],"import React, { useRef, useState } from 'react'\nimport { useForm } from \"react-hook-form\";\nimport firebase from \"../../firebase\"\n\nimport { Link } from \"react-router-dom\"\nimport LoginPage from '../Loginpage/LoginPage';\n\nfunction RegisterPage() {\n\n    const { register, handleSubmit, watch, errors } = useForm();\n\n    const [errorFromSubmit, seterrorFromSubmit] = useState(\"\")\n    const [Loading, setLoading] = useState(false)\n\n    //react-hook-form 에선 State 이 아닌 useRef 를 통해 비교\n    // 특정 Dom 을 선택하기 위해 사용\n    const password = useRef()\n    password.current = watch(\"password\");\n\n   const onSubmit = async (data) => {\n        try {\n            setLoading(true)\n            // firebase auth 로 아이디 생성\n            let createdUser = await firebase.auth().createUserWithEmailAndPassword(data.email, data.password)\n            await firebase.auth().updateCurrentUser({\n                displayName: data.name,\n                photoURL: `/images/Image.png`\n            })\n            //realtime database 에 저장\n            await firebase.database().ref(\"users\").child(createdUser.user.uid).set({\n                name: createdUser.user.displayName,\n                image: createdUser.user.photoURL\n            })\n            \n            console.log(createdUser)\n            setLoading(false)\n        } catch (error) {\n            setLoading(false)\n            seterrorFromSubmit(error.message)\n            setTimeout(() => {\n                seterrorFromSubmit(\"\")\n            }, 5000);\n        }\n   }\n\n    return (\n\n        <div class =\"auth-wrapper\">\n            <h2 style = {{ textAlign: 'center'}}>회원가입</h2>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <label>이메일</label>\n                <input \n                    name= \"email\" \n                    type = \"email\"\n                    ref={register({ required: true, pattern: /^\\S+@\\S+$/i })} \n                />\n                {errors.email && errors.email.type === \"required\" && <p>이메일 항목 칸을 입력하셔야 합니다.</p>}\n                {errors.email && errors.email.type === \"pattern\" && <p>이메일 형식이 올바르지 않습니다.</p>}\n\n                <label>이름</label>\n                <input\n                    name=\"name\"\n                    ref={register({ required: true, maxLength: 10 })}\n                />\n                {errors.name && errors.name.type === \"required\" && <p>이름 항목 칸을 입력하셔야 합니다.</p>}\n                {errors.name && errors.name.type === \"maxLength\" && <p>이름은 10자 를 넘어갈 수 없습니다.</p>}\n\n                <label>비밀번호</label>\n                <input \n                    name = \"password\"\n                    type = \"password\"\n                    ref = {register({ required: true, minLength: 6})}\n                />\n                {errors.password && errors.password.type === \"required\" && <p>비밀번호 항목 칸을 입력하셔야 합니다.</p>}\n                {errors.password && errors.password.type === \"minLength\" && <p>비밀번호는 6자리 이상 이어야 합니다.</p>}\n\n                <label>비밀번호 확인</label>\n                <input \n                    name = \"passwordConfirm\"\n                    type = \"password\"\n                    ref = {register({ required: true, validate: (value) => value === password.current})}\n                />\n                {errors.passwordConfirm && errors.passwordConfirm.type === \"required\" && <p>비밀번호 확인 항목 칸을 입력하셔야 합니다.</p>}\n                {errors.passwordConfirm && errors.passwordConfirm.type === \"validate\" && <p>비밀 번호가 동일 하지 않습니다..</p>}\n\n                <input type=\"submit\" disabled={Loading}/>\n            <Link style={{ color : 'gray', textDecoration:'none' }} to=\"login\">이미 아이디가 있다면 ...</Link>\n            \n                {errorFromSubmit && \n                    <p>{errorFromSubmit}</p>\n                }\n\n            </form>\n        </div>\n    )\n}\n\nexport default RegisterPage\n","/Users/junpyojang/gong/react-firebase-chat/src/components/Loginpage/LoginPage.js",[],"/Users/junpyojang/gong/react-firebase-chat/src/components/ChatPage/ChatPage.js",[],"/Users/junpyojang/gong/react-firebase-chat/src/firebase.js",[],"/Users/junpyojang/gong/react-firebase-chat/src/redux/reducer/user_reducer.js",["52"],"/Users/junpyojang/gong/react-firebase-chat/src/redux/actions/types.js",[],"/Users/junpyojang/gong/react-firebase-chat/src/redux/actions/user_actions.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":32,"column":6,"nodeType":"59","endLine":32,"endColumn":15,"suggestions":"60"},{"ruleId":"61","severity":1,"message":"62","line":6,"column":8,"nodeType":"63","messageId":"64","endLine":6,"endColumn":17},{"ruleId":"65","severity":1,"message":"66","line":10,"column":1,"nodeType":"67","endLine":22,"endColumn":2},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["70"],"no-unused-vars","'LoginPage' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"71","fix":"72"},"Update the dependencies array to be: [dispatch, history]",{"range":"73","text":"74"},[835,844],"[dispatch, history]"]